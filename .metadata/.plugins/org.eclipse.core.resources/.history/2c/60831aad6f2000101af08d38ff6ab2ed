package StepDefinition;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

import PageClasses.ForgetPasswordPage;
import PageClasses.LoginPage;
import PageClasses.SignUpPage;
import Utilities.BaseClass;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.testng.Assert;


public class StepDefinition1 extends BaseClass
{
	
	WebDriver driver=BaseClass.initializeDriver();
	SignUpPage signp=new SignUpPage(driver);
	String ActualMessage="Thank you! Your data has been submitted.";
	String getPageTitle = "Home";
	
	LoginPage login = new LoginPage(driver);
	
	ForgetPasswordPage fp = new ForgetPasswordPage(driver);
	
 /*--------------------------------------SignUp -------------------------------------------------------*/	
	
	@Given("user open the url for banking application")
	public void user_open_the_url_for_banking_application() {


	    System.out.println("Application launched");
	    System.out.println(getPageTitle());
		

		
	}
	
	@Given("user clicks on SignUp button in WebPage")
	public void user_clicks_on_sign_up_button_in_web_page() {
	    
	    
	    signp.clickOnSignUp();
	}
	
	
		
	  
	@Given("user enters the firstname as {string}")
	public void user_enters_the_firstname_as(String firstname) {
		
		signp.enterFirstName(firstname);
		
	    
	}

	@Given("user enters the lastname as {string}")
	public void user_enters_the_lastname_as(String lastname) {
		
		signp.enterLastName(lastname);
	   
	}

	@Given("user enters the phonenumber as {string}")
	public void user_enters_the_phonenumber_as(String phonenumber) {
		
		signp.enterPhone(phonenumber);
		scrollDown();
	  
	}

	@Given("user enters the dateofBirth as {string}")
	public void user_enters_the_dateof_birth_as(String DOB) throws InterruptedException {
		
		
		addHardcodedWait();
		signp.enterDOB(DOB);
		addHardcodedWait();
		
	    
	}

	@Given("user selects the gender")
	public void user_selects_the_gender() {
		
		signp.selectGender(2);
	   
	}

	@Given("user enters the cityname as {string}")
	public void user_enters_the_cityname_as(String City) {
	
		signp.enterCityName(City);
	}

	@Given("user enters the userid as {string}")
	public void user_enters_the_userid_as(String userId) {
		
		signp.enterUserId(userId);
	    
	}

	@Given("user enters the password as {string}")
	public void user_enters_the_password_as(String PassWord) {
		
		signp.enterPassword(PassWord);
	   
	}
	
	@When("user clicks on Submit button")
	public void user_clicks_on_submit_button() {
	   
		scrollDown();
		signp.clickonSubmit();
	}
	@Then("validate that user is getting proper response from site")
	public void validate_that_user_is_getting_proper_response_from_site() throws InterruptedException {
		
		scrollUp();
		addHardcodedWait();	
	String msg=	signp.validateMessage();
	Assert.assertEquals(ActualMessage, msg);
		
	    
	}

	/*@Then("also verify that the Title of the page is showing correct value")
	public void also_verify_that_the_title_of_the_page_is_showing_correct_value() 
	{
	    String msg1 = signp.validateMessage();
	    Assert.assertEquals(getPageTitle(), msg1);
	}*/
	
	
	@Given("user open url of banking application")
	public void user_open_url_of_banking_application() {
	    System.out.println(getPageTitle());
	}

	@Given("user click on login button")
	public void user_click_on_login_button() {
		
		login.clickonLogin();
	   
	}

	@Given("user enter username as {string}")
	public void user_enter_username_as(String userName) {
	   
		login.enterUid(userName);
	    
	}

	@Given("user enter password as {string}")
	public void user_enter_password_as(String Passwd) throws InterruptedException {
	    
		addHardcodedWait();
		login.enterPassword(Passwd);
	}

	@When("user click on submit button")
	public void user_click_on_submit_button() {
	    login.clickOnSubmit();
	}

/*	@Then("user will get a success message from site")
	public void user_will_get_a_success_message_from_site() {
		
		 addExplicitWait(By.xpath("//div[@class='js-successbox t-form__successbox t-text t-text_md']"));
		   String msg = login.VerifyMessage();
		   Assert.assertEquals(ActualMessage, msg); 
	    
	}*/


/*_____________________________________Forget Password-___---------------------------------------------------*/
	
	
	/*@Given("user open url of banking application")
	public void user_open_url_of_banking_application1() {
	    System.out.println(getPageTitle());
	}*/
	
	
	@Given("user click on forget password link")
	public void user_click_on_forget_password_link() {
		
		 fp.forgetPasswordLink();
	    
	}

	@Given("user enter email id as {string}")
	public void user_enter_email_id_as(String emailid) {
		
		fp.enterEmailId(emailid);
	   
	}

	@Given("user enter mobile number as {string}")
	public void user_enter_mobile_number_as(String mobnum) {
	    
		fp.enterMobileNumber(mobnum);
		
	}	
	@When("user click on reset password button")
	public void user_click_on_reset_password_button() {
	    
		fp.clickOnResetBtn();
	}

	@Then("user get message from site")
	public void user_get_message_from_site() {
		
		addExplicitWait(By.xpath("//div[@class='js-successbox t-form__successbox t-text t-text_md']"));
		String Message = fp.VerifyMessage();
		Assert.assertEquals(ActualMessage, Message);
		
	    
	}

/*----------------------------------------------AmountDetails cucumber shells----------------------------------------*/


@Given("User open the url of banking  application")
public void user_open_the_url_of_banking_application() {
   
}

@Given("user click on account details link")
public void user_click_on_account_details_link() {
    
}

@Given("Select customer name from dropdown")
public void select_customer_name_from_dropdown() {
    }

@Given("user click on login")
public void user_click_on_login() {
   
}

@Given("user click on deposite option")
public void user_click_on_deposite_option() {
    
}

@When("User deposite amount as {string}")
public void user_deposite_amount_as(String string) {

}

@Then("User see upadated balance")
public void user_see_upadated_balance() {
   
}

@Then("User click on withdrawl option")
public void user_click_on_withdrawl_option() {
   
}

@Then("User enter withdrawl  amount as {string}")
public void user_enter_withdrawl_amount_as(String string) {
   
}

@When("user click on withdrawl button")
public void user_click_on_withdrawl_button() {
   
}

@Then("User see deducted amount")
public void user_see_deducted_amount() {
  
}




}
